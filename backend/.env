# JWT Consts
SECRET_KEY = "SUPER_SECRET_KEY" #change in production
JWT_ALGORITHM = "HS256"
ACCES_JWT_EXPIRY_SECONDS = "3600"
REFRESH_JWT_EXPIRY_SECONDS = "36000"
QUERY_PARAM_MAX_L = "500"

POST_RATING_EXPIRATION = "60"

# Post actions cost
VIEW = "1"
LIKE = "5"
REPLY = "5"

RECOMMEND_POST_AGAING_IN = "3600"

FEED_MAX_POSTS_LOAD = "3"
# Variables down here need to sum up to FEED_MAX_POSTS_LOADED
N_MAX_HISTORY_POSTS_SHOW = "25"
N_MAX_FRESH_POSTS_TO_MIX = "25"
# Preferably be same as FEED_MAX_POSTS_LOADED
MAX_FOLLOWED_POSTS_TO_SHOW = "50"

DATETIME_BASE_FORMAT = "%d/%m/%Y, %H:%M:%S"

HISTORY_POSTS_TO_TAKE_INTO_RELATED = "30"

PASSWORD_MIN_L = "8"
PASSWORD_MAX_L = "32"

# CELERY | Call in /backend directory
# celery -A post_popularity_rate_celery.popularity_rate  worker --loglevel=info -P gevent
# celery -A post_popularity_rate_celery.celery_main beat -l info

#REDIS
    REDIS_PORT = "6379"

# CHROMADB 
    CHROMADB_PORT = "8080"
    CHROMADB_PROD_COLLECTION_NAME = "prod-collection"
    CHROMADB_TEST_COLLECTION_NAME = "prod-collection"

# POSTGRES
# Execute to manually run postgres image
# docker run --name postgres_container
# -e POSTGRES_USER=database
# -e POSTGRES_PASSWORD=password
# -e POSTGRES_DB=database
# -p 5432:5432
# -d postgres

    # Prod database
    DB_USERNAME = "database"
    DB_PASSWORD = "password" # change to yours
    DB_HOST = "localhost"
    DB_PORT = "5432"
    DB_NAME = "database"
    # Test database
    DB_USERNAME_TEST = "test"
    DB_PASSWORD_TEST = "password" # change to yours
    DB_HOST_TEST = "localhost"
    DB_PORT_TEST = "5433"
    DB_NAME_TEST = "test"

    # Database model constraits
    USERNAME_MAX_L = "32"
    USERNAME_MIN_L = "3"

    POST_TITLE_MAX_L = "256"
    POST_TITLE_MIN_L = "3"

    POST_TEXT_MAX_L = "4000"
    POST_TEXT_MIN_L = "8"
